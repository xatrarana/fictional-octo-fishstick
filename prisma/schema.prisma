// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(cuid())
  name           String?
  username       String?          @unique
  email          String           @unique
  passwordHash   String?
  image          String?
  roleId         Int
  Role           Role             @relation(fields: [roleId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}


model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime
  @@unique([email, token])
}


model Smtp {
  id        String   @id @default(cuid())
  servername String
  port       Int
  fromEmail   String
  username   String
  password   String
  displayname String
  toEmail    String?

  @@unique([username])
  @@index([username])
}


model Banner {
  id        String @id @default(cuid())
  title     String
  imageUrl  String
  slug      String @unique
  createdAt DateTime @default(now())
}

model Enquiry {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(100)
  email     String   @db.VarChar(255)
  subject   String   @db.VarChar(150)
  message   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Organization {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(50)
  email     String   @db.VarChar(255)
  phone     String   @db.VarChar(20)
  landline  String?   @db.VarChar(20)
  address   String   @db.Text
  primaryLogoUrl String?
  secondaryLogoUrl      String?
  facebookUrl        String?
  twitterUrl         String?
  linkedinUrl        String?
  instagramUrl       String?
  youtubeUrl         String?
  description        String   @db.Text
  paymentLogoUrl        String?
  paymentHeader      String?
  websiteUrl         String?
  country            String?
  noOfEmployees      Int?
  contactPersonName      String?
  contactPersonEmail String?
  contactPersonPhone String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model About {
  id        String   @id @default(cuid())
  title     String
  content   String   @db.Text
  mission   String   @db.Text
  vission   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Notice {
  id          String   @id @default(cuid())
  title       String   @db.VarChar(100)
  content     String   @db.Text
  fileUrl     String?
  type        String   @db.VarChar(50)
  status      String   @db.VarChar(50)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OrganizationTeam {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(255)
  chairman  String?  @db.VarChar(255)
  viceChairman String? @db.VarChar(255)
  secretary String?  @db.VarChar(255)
  members   Member[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Member {
  id              String   @id @default(cuid())
  organizationTeamId String @db.VarChar(255)
  name            String   @db.VarChar(255)
  positionId          String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  organizationTeam OrganizationTeam @relation(fields: [organizationTeamId], references: [id])
  position             Positon             @relation(fields: [positionId], references: [id])
}

model Positon {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members   Member[]
}

model Service {
  id         String    @id @default(cuid())
  name       String    @db.VarChar(255)
  slug       String    @unique @db.VarChar(255)
  isEnabled  Boolean   @default(true)
  products   Product[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Product {
  id         String    @id @default(cuid())
  name       String    @db.VarChar(255)
  slug       String    @unique @db.VarChar(255)
  serviceId  String
  service    Service   @relation(fields: [serviceId], references: [id])
  isEnabled  Boolean   @default(true)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}


model Gallery {
  id         String    @id @default(cuid())
  title      String    @db.VarChar(255)
  slug       String    @unique @db.VarChar(255)
  description String?  @db.Text
  images     Image[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Image {
  id         String    @id @default(cuid())
  url        String    @db.Text
  altText    String?   @db.VarChar(255)
  galleryId  String
  gallery    Gallery   @relation(fields: [galleryId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}


model FlashNews {
  id        Int      @id @default(autoincrement())
  message   String
  enabled   Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
